<UserControl x:Class="Robock.Views.Tabs.DesktopTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:behaviors="clr-namespace:Robock.Behaviors"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
             xmlns:tvm="clr-namespace:Robock.ViewModels.Tabs"
             xmlns:vm="clr-namespace:Robock.ViewModels"
             d:DataContext="{d:DesignInstance tvm:DesktopViewModel}"
             d:DesignHeight="450"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <Grid>
        <Grid.Resources>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrushKey}" />
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Margin="0,0,0,5"
                    Orientation="Horizontal">
            <Button Width="150"
                    Margin="0,0,10,0"
                    Command="{Binding ApplyWallpaperCommand}"
                    Content="Apply Wallpaper" />
            <Button Width="150"
                    Command="{Binding DiscardWallpaperCommand}"
                    Content="Discard Wallpaper" />
        </StackPanel>
        <StackPanel Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Height="24"
                    Orientation="Horizontal">
            <TextBlock VerticalAlignment="Center"
                       Text="Window to render as wallpaper : " />
            <metro:PromptComboBox Width="250"
                                  IsEditable="False"
                                  ItemsSource="{Binding Windows}"
                                  Prompt="Select window for wallpaper"
                                  SelectedItem="{Binding SelectedWindow.Value, Mode=TwoWay}">
                <metro:PromptComboBox.ItemTemplate>
                    <DataTemplate DataType="vm:WindowViewModel">
                        <TextBlock VerticalAlignment="Center"
                                   Text="{Binding Name}"
                                   TextTrimming="CharacterEllipsis" />
                    </DataTemplate>
                </metro:PromptComboBox.ItemTemplate>
            </metro:PromptComboBox>
            <Button Command="{Binding ReloadWindowsCommand}">
                <TextBlock fa:Awesome.Inline=":SyncAlt:" />
            </Button>
        </StackPanel>
        <TextBlock Grid.Row="2"
                   Grid.Column="0"
                   Grid.ColumnSpan="2"
                   Margin="0,5,0,10"
                   Text="Select the square range from live editor that you want to use as wallpaper : " />
        <StackPanel Grid.Row="3"
                    Grid.Column="0"
                    Margin="0,2.5,5,0">
            <TextBlock Margin="0,0,0,5"
                       Text="Live Editor:" />
            <Grid>
                <i:Interaction.Behaviors>
                    <behaviors:RectangleSelectorBehavior Width="{Binding SelectedAreaWidth.Value, Mode=OneWayToSource}"
                                                         Height="{Binding SelectedAreaHeight.Value, Mode=OneWayToSource}"
                                                         Left="{Binding SelectedAreaLeft.Value, Mode=OneWayToSource}"
                                                         Rectangle="{Binding ElementName=Rectangle}"
                                                         Top="{Binding SelectedAreaTop.Value, Mode=OneWayToSource}" />
                </i:Interaction.Behaviors>
                <Image HorizontalAlignment="Center"
                       Source="{Binding AspectRatio, Mode=OneWay}"
                       Stretch="Uniform">
                    <i:Interaction.Behaviors>
                        <behaviors:ControlPositionBindingBehavior Width="{Binding PreviewAreaWidth.Value, Mode=OneWayToSource}"
                                                                  Height="{Binding PreviewAreaHeight.Value, Mode=OneWayToSource}"
                                                                  Left="{Binding PreviewAreaLeft.Value, Mode=OneWayToSource}"
                                                                  Top="{Binding PreviewAreaTop.Value, Mode=OneWayToSource}" />
                    </i:Interaction.Behaviors>
                </Image>
                <Rectangle x:Name="Rectangle"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Top"
                           Fill="{DynamicResource AccentForegroundBrushKey}"
                           Opacity="1"
                           Stroke="{DynamicResource AccentBrushKey}"
                           StrokeThickness="2"
                           Visibility="Hidden" />

            </Grid>
        </StackPanel>
        <StackPanel Grid.Row="3"
                    Grid.Column="1"
                    Margin="5,2.5,0,0">
            <TextBlock Margin="0,0,0,5"
                       Text="Live Preview:" />
            <Image HorizontalAlignment="Center"
                   Source="{Binding AspectRatio, Mode=OneWay}"
                   Stretch="Uniform" />
        </StackPanel>
    </Grid>
</UserControl>