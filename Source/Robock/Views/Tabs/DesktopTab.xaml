<UserControl x:Class="Robock.Views.Tabs.DesktopTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:behaviors="clr-namespace:Robock.Behaviors"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dxinterop="clr-namespace:Microsoft.Wpf.Interop.DirectX;assembly=Microsoft.Wpf.Interop.DirectX"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:tvm="clr-namespace:Robock.ViewModels.Tabs"
             d:DataContext="{d:DesignInstance tvm:DesktopViewModel}"
             d:DesignHeight="450"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <Grid>
        <Grid.Resources>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrushKey}" />
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="130" />
        </Grid.RowDefinitions>

        <Grid x:Name="Grid"
              Grid.Row="0"
              Margin="0,5">
            <Grid x:Name="InnerGrid"
                  Width="{Binding PreviewWidth.Value, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                  Height="{Binding PreviewHeight.Value, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                  Background="Black">
                <i:Interaction.Behaviors>
                    <behaviors:AdjustControlSizeToParentBehavior AttachTo="{Binding ElementName=Grid}"
                                                                 BaseHeight="{Binding Height}"
                                                                 BaseWidth="{Binding Width}" />
                </i:Interaction.Behaviors>
                <Image RenderOptions.BitmapScalingMode="Unspecified"
                       RenderOptions.EdgeMode="Unspecified"
                       Source="{Binding Wallpaper.Value, Mode=OneWay}" />
                <Canvas Background="Transparent">
                    <Canvas.Clip>
                        <RectangleGeometry>
                            <i:Interaction.Behaviors>
                                <behaviors:AdjustRectSizeByParentControlBehavior AttachTo="{Binding ElementName=InnerGrid}"
                                                                                 OffsetX="-2.5"
                                                                                 OffsetY="-2.5" />
                            </i:Interaction.Behaviors>
                        </RectangleGeometry>
                    </Canvas.Clip>
                    <Thumb Canvas.Left="{Binding RenderLeft.Value, Mode=OneWayToSource}"
                           Canvas.Top="{Binding RenderTop.Value, Mode=OneWayToSource}"
                           Visibility="{Binding IsSelectedWindow.Value, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <i:Interaction.Behaviors>
                            <behaviors:CanvasBindingBehavior Left="{Binding RenderLeft.Value, Mode=OneWay}" Top="{Binding RenderTop.Value, Mode=OneWay}" />
                            <behaviors:DraggableControlOnCanvasBehavior />
                            <behaviors:ResetCanvasPositionOnVisibilityChangedBehavior />
                        </i:Interaction.Behaviors>
                        <Thumb.Template>
                            <ControlTemplate>
                                <Border Background="Black"
                                        BorderBrush="{DynamicResource AccentActiveBrushKey}"
                                        BorderThickness="2.5">
                                    <Image Width="{Binding Width, RelativeSource={RelativeSource AncestorType=Grid}, Mode=OneWay}" Height="{Binding Height, RelativeSource={RelativeSource AncestorType=Grid}, Mode=OneWay}">
                                        <Image.Source>
                                            <dxinterop:D3D11Image>
                                                <i:Interaction.Behaviors>
                                                    <behaviors:DxInteropBehavior Parent="{Binding RelativeSource={RelativeSource AncestorType=Border}}"
                                                                                 Renderer="{Binding Renderer.Value, Mode=OneWay}"
                                                                                 State="{Binding Path=Visibility, RelativeSource={RelativeSource AncestorType=Thumb}}" />
                                                </i:Interaction.Behaviors>
                                            </dxinterop:D3D11Image>
                                        </Image.Source>
                                    </Image>
                                </Border>
                            </ControlTemplate>
                        </Thumb.Template>
                    </Thumb>
                </Canvas>
            </Grid>
        </Grid>

        <Separator Grid.Row="1" />

        <Grid Grid.Row="2" Margin="0,5,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.5*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" Margin="0,0,10,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Vertical">
                    <TextBlock FontSize="16" Text="キャプチャソース" />

                    <Grid Margin="0,2.5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="120" />
                            <ColumnDefinition Width="30" />
                        </Grid.ColumnDefinitions>
                        <metro:PromptTextBox Grid.Column="0"
                                             Height="25"
                                             HorizontalAlignment="Stretch"
                                             IsEnabled="False"
                                             Text="{Binding CaptureSourceName.Value, Mode=OneWay}" />
                        <Button Grid.Column="1"
                                Height="25"
                                Command="{Binding SelectCaptureSourceCommand}">
                            <TextBlock fa:Awesome.Inline=":MousePointer: Window を選択" />
                        </Button>
                        <Button Grid.Column="2"
                                Height="25"
                                Command="{Binding ClearSelectCommand}"
                                ToolTip="選択をクリア">
                            <TextBlock fa:Awesome.Inline=":Times:" />
                        </Button>
                    </Grid>
                </StackPanel>
                <StackPanel Grid.Row="1" Orientation="Vertical">
                    <TextBlock FontSize="16" Text="拡大率" />
                    <StackPanel Margin="0,2.5" Orientation="Horizontal">
                        <metro:PromptTextBox IsEnabled="False"
                                             Text="{Binding RenderScale.Value, Mode=OneWay}"
                                             ToolTipService.ShowOnDisabled="True">
                            <metro:PromptTextBox.ToolTip>
                                <TextBlock>
                                    <!--    -->
                                    プレビュー画面に対しての、描画時の拡大率です。<LineBreak />
                                    プレビューの値に対して、表示されている倍率がかけられた値が使用されます。
                                    <!--    -->
                                </TextBlock>
                            </metro:PromptTextBox.ToolTip>
                        </metro:PromptTextBox>
                        <TextBlock Padding="5,0,0,0"
                                   VerticalAlignment="Center"
                                   Text="倍" />
                    </StackPanel>
                </StackPanel>
            </Grid>

            <StackPanel Grid.Column="1" Margin="0,0,10,0">
                <TextBlock FontSize="16" Text="描画位置" />

                <Grid Margin="0,2.5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25" />
                        <RowDefinition Height="25" />
                        <RowDefinition Height="25" />
                        <RowDefinition Height="25" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0"
                               Grid.Column="0"
                               VerticalAlignment="Center"
                               FontSize="12"
                               Text="トップ : " />
                    <metro:PromptTextBox Grid.Row="0"
                                         Grid.Column="1"
                                         Height="25"
                                         Prompt="0"
                                         Text="{Binding RenderTop.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <metro:PromptTextBox.ToolTip>
                            <TextBlock>
                                <!--    -->
                                キャプチャーしたい範囲の左上Y座標を指定します。<LineBreak />
                                ここで設定する値は、プレビュー画面上での相対値です。描画時には絶対値に変換されます。
                                <!--    -->
                            </TextBlock>
                        </metro:PromptTextBox.ToolTip>
                    </metro:PromptTextBox>

                    <TextBlock Grid.Row="1"
                               Grid.Column="0"
                               VerticalAlignment="Center"
                               FontSize="12"
                               Text="レフト : " />
                    <metro:PromptTextBox Grid.Row="1"
                                         Grid.Column="1"
                                         Height="25"
                                         Prompt="0"
                                         Text="{Binding RenderLeft.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <metro:PromptTextBox.ToolTip>
                            <TextBlock>
                                <!--    -->
                                キャプチャーしたい範囲の左上X座標を指定します。<LineBreak />
                                ここで設定する値は、プレビュー画面上での相対値です。描画時には絶対値に変換されます。
                                <!--    -->
                            </TextBlock>
                        </metro:PromptTextBox.ToolTip>
                    </metro:PromptTextBox>

                    <TextBlock Grid.Row="2"
                               Grid.Column="0"
                               VerticalAlignment="Center"
                               FontSize="12"
                               Text="高さ : " />
                    <metro:PromptTextBox Grid.Row="2"
                                         Grid.Column="1"
                                         Height="25"
                                         Prompt="1080" />

                    <TextBlock Grid.Row="3"
                               Grid.Column="0"
                               VerticalAlignment="Center"
                               FontSize="12"
                               Text="横幅 : " />
                    <metro:PromptTextBox Grid.Row="3"
                                         Grid.Column="1"
                                         Height="25"
                                         Prompt="1920" />

                </Grid>
            </StackPanel>

            <StackPanel Grid.Column="2"
                        Margin="0,0,10,0"
                        Orientation="Vertical">
                <TextBlock FontSize="16" Text="オプション" />
                <Grid Margin="0,2.5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25" />
                        <RowDefinition Height="25" />
                        <RowDefinition Height="25" />
                        <RowDefinition Height="25" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="75" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0"
                               Grid.Column="0"
                               VerticalAlignment="Center"
                               Text="描画形式 : " />
                    <metro:PromptComboBox Grid.Row="0"
                                          Grid.Column="1"
                                          Height="25"
                                          Prompt="描画形式を選択してください"
                                          ToolTipService.ShowOnDisabled="True">
                        <metro:PromptComboBox.ToolTip>
                            <TextBlock>
                                <!--    -->
                                プレビューおよび背景に描画するための方法を選択します。<LineBreak />
                                デフォルトで最適なものが選択されていますが、描画されない場合などに変更することが出来ます。
                                <!--    -->
                            </TextBlock>
                        </metro:PromptComboBox.ToolTip>
                    </metro:PromptComboBox>

                </Grid>
                <!--  TODO  -->
                <StackPanel Margin="0,2.5" Orientation="Horizontal" />
            </StackPanel>

            <StackPanel Grid.Column="3" Orientation="Vertical">
                <TextBlock FontSize="16" Text="操作" />
                <Button Height="25"
                        Margin="0,2.5"
                        Command="{Binding ApplyWallpaperCommand}"
                        Content="描画開始" />
                <Button Height="25"
                        Margin="0,2.5"
                        Command="{Binding DiscardWallpaperCommand}"
                        Content="終了" />
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>