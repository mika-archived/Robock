<UserControl x:Class="Robock.Views.Tabs.DesktopTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:behaviors="clr-namespace:Robock.Behaviors"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dxinterop="clr-namespace:Microsoft.Wpf.Interop.DirectX;assembly=Microsoft.Wpf.Interop.DirectX"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
             xmlns:tvm="clr-namespace:Robock.ViewModels.Tabs"
             xmlns:vm="clr-namespace:Robock.ViewModels"
             d:DataContext="{d:DesignInstance tvm:DesktopViewModel}"
             d:DesignHeight="450"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <Grid>
        <Grid.Resources>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrushKey}" />
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="125" />
        </Grid.RowDefinitions>

        <Grid x:Name="Grid"
              Grid.Row="0"
              Margin="0,5">
            <Grid x:Name="InnerGrid" Background="Black">
                <i:Interaction.Behaviors>
                    <behaviors:AdjustControlSizeToParentBehavior AttachTo="{Binding ElementName=Grid}"
                                                                 BaseHeight="{Binding Height}"
                                                                 BaseWidth="{Binding Width}" />
                </i:Interaction.Behaviors>
                <Image RenderOptions.BitmapScalingMode="Unspecified"
                       RenderOptions.EdgeMode="Unspecified"
                       Source="{Binding Wallpaper.Value, Mode=OneWay}" />
                <Canvas Background="Transparent">
                    <Canvas.Clip>
                        <RectangleGeometry>
                            <i:Interaction.Behaviors>
                                <behaviors:AdjustRectSizeByParentControlBehavior AttachTo="{Binding ElementName=InnerGrid}"
                                                                                 OffsetX="-2.5"
                                                                                 OffsetY="-2.5" />
                            </i:Interaction.Behaviors>
                        </RectangleGeometry>
                    </Canvas.Clip>
                    <Border Canvas.Left="-120.5"
                            Canvas.Top="-112.5"
                            BorderBrush="{DynamicResource AccentActiveBrushKey}"
                            BorderThickness="2.5"
                            Visibility="{Binding IsSelectedWindow.Value, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Image Width="{Binding Width, RelativeSource={RelativeSource AncestorType=Grid}, Mode=OneWay}" Height="{Binding Height, RelativeSource={RelativeSource AncestorType=Grid}, Mode=OneWay}">
                            <Image.Source>
                                <dxinterop:D3D11Image>
                                    <i:Interaction.Behaviors>
                                        <behaviors:DxInteropBehavior Parent="{Binding RelativeSource={RelativeSource AncestorType=Border}}"
                                                                     Renderer="{Binding Renderer.Value, Mode=OneWay}"
                                                                     State="{Binding Path=Visibility, RelativeSource={RelativeSource AncestorType=Border}}" />
                                    </i:Interaction.Behaviors>
                                </dxinterop:D3D11Image>
                            </Image.Source>
                        </Image>
                    </Border>
                </Canvas>
            </Grid>
        </Grid>

        <Separator Grid.Row="1" />

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.5*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0"
                        Margin="0,0,10,0"
                        Orientation="Vertical">
                <TextBlock FontSize="16" Text="キャプチャソース" />

                <Grid Margin="0,2.5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>
                    <metro:PromptComboBox Grid.Column="0"
                                          Height="25"
                                          HorizontalAlignment="Stretch"
                                          IsEditable="False"
                                          ItemsSource="{Binding Windows}"
                                          Prompt="キャプチャーする Window を選択してください"
                                          SelectedItem="{Binding SelectedWindow.Value, Mode=TwoWay}">
                        <metro:PromptComboBox.ItemTemplate>
                            <DataTemplate DataType="vm:WindowViewModel">
                                <TextBlock VerticalAlignment="Center"
                                           Text="{Binding Title.Value, Mode=OneWay}"
                                           TextTrimming="CharacterEllipsis" />
                            </DataTemplate>
                        </metro:PromptComboBox.ItemTemplate>
                    </metro:PromptComboBox>
                    <Button Grid.Column="1"
                            Height="25"
                            Command="{Binding ReloadWindowsCommand}"
                            ToolTip="Window リストを更新">
                        <TextBlock fa:Awesome.Inline=":SyncAlt:" />
                    </Button>
                    <Button Grid.Column="2"
                            Height="25"
                            Command="{Binding ClearSelectCommand}"
                            ToolTip="選択をクリア">
                        <TextBlock fa:Awesome.Inline=":Times:" />
                    </Button>
                </Grid>
            </StackPanel>

            <StackPanel Grid.Column="1"
                        Margin="0,0,10,0"
                        Orientation="Vertical">
                <TextBlock FontSize="16" Text="オプション" />
                <!--  TODO  -->
                <CheckBox Height="25"
                          Margin="0,2.5"
                          Content="相互運用 API を使用する"
                          IsEnabled="False"
                          ToolTipService.ShowOnDisabled="True">
                    <CheckBox.ToolTip>
                        <TextBlock>
                            UWP 用に提供されている API を使用してキャプチャーを行います。<LineBreak />
                            Windows 10 October 2018 Update 以降でのみ使用可能です。</TextBlock>
                    </CheckBox.ToolTip>
                </CheckBox>
            </StackPanel>

            <StackPanel Grid.Column="2" Orientation="Vertical">
                <TextBlock FontSize="16" Text="操作" />
                <Button Height="25"
                        Margin="0,2.5"
                        Command="{Binding ApplyWallpaperCommand}"
                        Content="描画開始" />
                <Button Height="25"
                        Margin="0,2.5"
                        Command="{Binding DiscardWallpaperCommand}"
                        Content="終了" />
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>